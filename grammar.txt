/*
 * DCPU16 ASM Parser
 */

{
  var line = 0;
}

start
  = program:statements
    {
      return program;
    }


statements
  = stmt:stmt nl* statements:statements
    { return [stmt].concat(statements); }

  / stmt:stmt nl*
    { return [stmt]; }

  / nl*
    { return []; }


stmt
  = ws ":" label:label ws cmd:cmd ws
    {
      return {
        line: line,
        label: label,
        cmd: cmd
      };
    }

  / ws ":" label:label ws
    {
      return {
        line: line,
        label: label
      };
    }

  / ws cmd:cmd ws
    {
      return {
        line: line,
        cmd: cmd
      };
    }


label "label"
  = label:([a-zA-Z0-9_\.]+)
    {
      return label.join('');
    }


cmd
  = ws op:op ws param1:param ws "," ws param2:param
    {
      return {
        op: op,
        params: [param1, param2]
      };
    }

  / ws op:op ws param:param
    {
      return {
        op: op,
        params: [param]
      };
    }


op "operator"
  = op:([a-zA-Z][a-zA-Z][a-zA-Z]) { return op.join('').toUpperCase(); }


param "parameter"
  = "[" ws v1:paramaddress ws "+" ws v2:paramaddress ws "]"
    {
      return {
        values: [v1, v2]
      };
    }
  / "[" ws v:paramaddress ws "]"
    {
      v.hasBrackets = true;
      return v;
    }
  / v:paramaddress
    {
      return v;
    }

paramaddress
  = v:number
    {
      return {
        value: v,
        isNumber: true
      };
    }
  / v:label
    {
      return {
        value: v,
        isString: true
      };
    }

number "number"
  /* oct */
  = v:("0"[0-9]+)
    { return parseInt(v[0] + v[1].join(''), 8); }
  /* hex */
  / v:("0x"[0-9a-fA-F]+)
    { return parseInt(v[0] + v[1].join(''), 16); }
  /* dec */
  / v:[0-9]+
    { return parseInt(v.join(''), 10); }


ws "whitespace"
  = [" ""\t"]*


nl "newline"
  = "\n" { line++; }
  / "\r\n" { line++; }
  / "\r" { line++; }